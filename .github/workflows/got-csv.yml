name: Build GOTW CSV

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes
  issues:
    types: [opened, edited, labeled, unlabeled, reopened, closed]

permissions:
  contents: write
  issues: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate CSV from issues labeled gotw-week2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          mkdir -p data
          node - <<'NODE'
          const fs = require('fs');
          const REPO = process.env.REPO;
          const TOKEN = process.env.GH_TOKEN;
          const OPTIONS = [
            "Florida State at Texas",
            "Arkansas at Utah",
            "Arizona State at Texas A&M",
            "Georgia at Illinois",
            "Oklahoma at Michigan",
            "USC at LSU"
          ];

          async function gh(url) {
            const res = await fetch(url, {
              headers: {
                'Authorization': `Bearer ${TOKEN}`,
                'Accept': 'application/vnd.github+json',
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            if (!res.ok) throw new Error(await res.text());
            return res.json();
          }

          async function getAllIssues(page=1, acc=[]) {
            const url = `https://api.github.com/repos/${REPO}/issues?state=open&labels=${encodeURIComponent('gotw-week2')}&per_page=100&page=${page}`;
            const items = await gh(url);
            acc.push(...items.filter(i => !i.pull_request));
            if (items.length === 100) return getAllIssues(page+1, acc);
            return acc;
          }

          (async ()=>{
            const issues = await getAllIssues();
            // Keep only latest vote per user
            issues.sort((a,b)=> new Date(a.created_at) - new Date(b.created_at));
            const byUser = new Map();
            for (const i of issues) {
              const text = `${i.title||''}\n${i.body||''}`;
              const found = OPTIONS.find(o => text.toLowerCase().includes(o.toLowerCase()));
              if (found) byUser.set(i.user.login, found);
            }
            const counts = new Map(OPTIONS.map(o => [o, 0]));
            for (const choice of byUser.values()) counts.set(choice, (counts.get(choice)||0)+1);

            let csv = 'option,votes\n';
            for (const o of OPTIONS) csv += `"${o.replace(/"/g,'""')}",${counts.get(o)||0}\n`;
            fs.writeFileSync('data/gotw_week2.csv', csv);
            console.log(csv);
          })().catch(e => { console.error(e); process.exit(1); });
          NODE

      - uses: EndBug/add-and-commit@v9
        with:
          add: 'data/gotw_week2.csv'
          message: 'Update GOTW Week 2 poll CSV'
          default_author: github_actions
